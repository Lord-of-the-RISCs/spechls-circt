spechls.kernel @IDG_SRC_0(%0 : !spechls.array<ui8, 2048>, %1 : !spechls.array<ui8, 2048>, %2 : !spechls.array<ui8, 2048>, %3 : !spechls.array<ui8, 2048>, %4 : !spechls.array<si32, 32>, %5 : si32, %6 : !spechls.array<ui32, 2048>, %7 : i1, %8 : si32) {
    %9 = spechls.task "SCC_dataMemory_2_dataMemory_1_dataMemory_0_x_l_pc_guard_dataMemory_3"(%10 = %0, %11 = %1, %12 = %2, %13 = %3, %14 = %4, %15 = %5, %16 = %6, %17 = %7) : (!spechls.array<ui8, 2048>, !spechls.array<ui8, 2048>, !spechls.array<ui8, 2048>, !spechls.array<ui8, 2048>, !spechls.array<si32, 32>, si32, !spechls.array<ui32, 2048>, i1) -> !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }> {
        %19 = hw.constant 0 : i32
        %18 = hw.bitcast %19 : (i32) -> si32
        %20 = hw.bitcast %18 : (si32) -> ui32
        %22 = hw.constant 1 : i32
        %21 = hw.bitcast %22 : (i32) -> si32
        %23 = hw.bitcast %21 : (si32) -> ui32
        %25 = hw.constant 2 : i32
        %24 = hw.bitcast %25 : (i32) -> si32
        %26 = hw.bitcast %24 : (si32) -> ui32
        %28 = hw.constant 3 : i32
        %27 = hw.bitcast %28 : (i32) -> si32
        %29 = hw.bitcast %27 : (si32) -> ui32
        %31 = hw.constant 4 : i32
        %30 = hw.bitcast %31 : (i32) -> si32
        %32 = hw.bitcast %30 : (si32) -> ui32
        %34 = hw.bitcast %18 : (si32) -> i32
        %35 = comb.extract %34 from 0 : (i32) -> i8
        %33 = hw.bitcast %35 : (i8) -> ui8
        %36 = spechls.mu<"dataMemory_3">(%10, %37) : !spechls.array<ui8, 2048>
        %38 = spechls.mu<"dataMemory_2">(%11, %39) : !spechls.array<ui8, 2048>
        %40 = spechls.mu<"dataMemory_1">(%12, %41) : !spechls.array<ui8, 2048>
        %42 = spechls.mu<"dataMemory_0">(%13, %43) : !spechls.array<ui8, 2048>
        %44 = spechls.mu<"x">(%14, %45) : !spechls.array<si32, 32>
        %46 = spechls.mu<"l_pc">(%15, %47) : si32
        %48 = spechls.call @fetch(%16, %46) {"#pragma" = "WCET fetch"} : (!spechls.array<ui32, 2048>, si32) -> si32
        %49 = spechls.call @decode(%48) : (si32) -> !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %51 = hw.constant 127 : i32
        %50 = hw.bitcast %51 : (i32) -> si32
        %54 = hw.bitcast %48 : (si32) -> i32
        %55 = hw.bitcast %50 : (si32) -> i32
        %53 = comb.and %54, %55 : i32
        %52 = hw.bitcast %53 : (i32) -> si32
        %57 = hw.bitcast %52 : (si32) -> i32
        %58 = comb.extract %57 from 0 : (i32) -> i8
        %56 = hw.bitcast %58 : (i8) -> si8
        %60 = hw.constant 7 : i32
        %59 = hw.bitcast %60 : (i32) -> si32
        %63 = hw.bitcast %48 : (si32) -> i32
        %64 = hw.bitcast %59 : (si32) -> i32
        %62 = comb.shrs %63, %64 : i32
        %61 = hw.bitcast %62 : (i32) -> si32
        %66 = hw.constant 31 : i32
        %65 = hw.bitcast %66 : (i32) -> si32
        %69 = hw.bitcast %61 : (si32) -> i32
        %70 = hw.bitcast %65 : (si32) -> i32
        %68 = comb.and %69, %70 : i32
        %67 = hw.bitcast %68 : (i32) -> si32
        %72 = hw.bitcast %67 : (si32) -> i32
        %73 = comb.extract %72 from 0 : (i32) -> i8
        %71 = hw.bitcast %73 : (i8) -> si8
        %75 = hw.constant 12 : i32
        %74 = hw.bitcast %75 : (i32) -> si32
        %78 = hw.bitcast %48 : (si32) -> i32
        %79 = hw.bitcast %74 : (si32) -> i32
        %77 = comb.shrs %78, %79 : i32
        %76 = hw.bitcast %77 : (i32) -> si32
        %82 = hw.bitcast %76 : (si32) -> i32
        %83 = hw.bitcast %59 : (si32) -> i32
        %81 = comb.and %82, %83 : i32
        %80 = hw.bitcast %81 : (i32) -> si32
        %85 = hw.bitcast %80 : (si32) -> i32
        %86 = comb.extract %85 from 0 : (i32) -> i8
        %84 = hw.bitcast %86 : (i8) -> si8
        %87 = spechls.field<"rs1"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %88 = spechls.field<"rs2"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %89 = spechls.field<"opcode"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %90 = spechls.call @computeRs1Type(%89) : (ui8) -> si8
        %91 = hw.bitcast %90 : (si8) -> ui8
        %93 = hw.constant 0 : i8
        %94 = hw.bitcast %91 : (ui8) -> i8
        %92 = comb.icmp ugt %94, %93 : i8
        %96 = hw.constant -1 : i1
        %97 = hw.bitcast %92 : (i1) -> i1
        %98 = comb.xor %97, %96 : i1
        %95 = hw.bitcast %98 : (i1) -> i1
        %100 = hw.constant 0 : i1
        %103 = hw.bitcast %92 : (i1) -> i1
        %104 = hw.bitcast %95 : (i1) -> i1
        %101 = comb.or %103, %104 : i1
        %102 = comb.icmp ne %101, %100 : i1
        %99 = hw.bitcast %102 : (i1) -> i1
        %105 = spechls.field<"funct3"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %106 = spechls.call @computeRs2Type(%89, %105) : (ui8, ui8) -> si8
        %107 = hw.bitcast %106 : (si8) -> ui8
        %109 = hw.bitcast %107 : (ui8) -> i8
        %110 = hw.constant 0 : i24
        %111 = comb.concat %110, %109 : i24, i8
        %108 = hw.bitcast %111 : (i32) -> ui32
        %114 = hw.bitcast %108 : (ui32) -> i32
        %115 = hw.bitcast %20 : (ui32) -> i32
        %113 = comb.icmp eq %114, %115 : i32
        %112 = hw.bitcast %113 : (i1) -> i1
        %117 = hw.constant 0 : i1
        %120 = hw.bitcast %99 : (i1) -> i1
        %121 = hw.bitcast %112 : (i1) -> i1
        %118 = comb.and %120, %121 : i1
        %119 = comb.icmp ne %118, %117 : i1
        %116 = hw.bitcast %119 : (i1) -> i1
        %123 = hw.constant -1 : i1
        %124 = hw.bitcast %112 : (i1) -> i1
        %125 = comb.xor %124, %123 : i1
        %122 = hw.bitcast %125 : (i1) -> i1
        %127 = hw.constant 0 : i1
        %130 = hw.bitcast %99 : (i1) -> i1
        %131 = hw.bitcast %122 : (i1) -> i1
        %128 = comb.and %130, %131 : i1
        %129 = comb.icmp ne %128, %127 : i1
        %126 = hw.bitcast %129 : (i1) -> i1
        %134 = hw.bitcast %108 : (ui32) -> i32
        %135 = hw.bitcast %23 : (ui32) -> i32
        %133 = comb.icmp eq %134, %135 : i32
        %132 = hw.bitcast %133 : (i1) -> i1
        %137 = hw.constant 0 : i1
        %140 = hw.bitcast %122 : (i1) -> i1
        %141 = hw.bitcast %132 : (i1) -> i1
        %138 = comb.and %140, %141 : i1
        %139 = comb.icmp ne %138, %137 : i1
        %136 = hw.bitcast %139 : (i1) -> i1
        %143 = hw.constant 0 : i1
        %146 = hw.bitcast %126 : (i1) -> i1
        %147 = hw.bitcast %132 : (i1) -> i1
        %144 = comb.and %146, %147 : i1
        %145 = comb.icmp ne %144, %143 : i1
        %142 = hw.bitcast %145 : (i1) -> i1
        %148 = spechls.field<"simm_I"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %150 = hw.bitcast %148 : (si16) -> i16
        %151 = comb.extract %150 from 15 : (i16) -> i1
        %152 = comb.replicate %151 : (i1) -> i16
        %153 = comb.concat %152, %150 : i16, i16
        %149 = hw.bitcast %153 : (i32) -> si32
        %155 = hw.constant -1 : i1
        %156 = hw.bitcast %132 : (i1) -> i1
        %157 = comb.xor %156, %155 : i1
        %154 = hw.bitcast %157 : (i1) -> i1
        %159 = hw.constant 0 : i1
        %162 = hw.bitcast %122 : (i1) -> i1
        %163 = hw.bitcast %154 : (i1) -> i1
        %160 = comb.and %162, %163 : i1
        %161 = comb.icmp ne %160, %159 : i1
        %158 = hw.bitcast %161 : (i1) -> i1
        %165 = hw.constant 0 : i1
        %168 = hw.bitcast %126 : (i1) -> i1
        %169 = hw.bitcast %154 : (i1) -> i1
        %166 = comb.and %168, %169 : i1
        %167 = comb.icmp ne %166, %165 : i1
        %164 = hw.bitcast %167 : (i1) -> i1
        %172 = hw.bitcast %108 : (ui32) -> i32
        %173 = hw.bitcast %26 : (ui32) -> i32
        %171 = comb.icmp eq %172, %173 : i32
        %170 = hw.bitcast %171 : (i1) -> i1
        %175 = hw.constant 0 : i1
        %178 = hw.bitcast %158 : (i1) -> i1
        %179 = hw.bitcast %170 : (i1) -> i1
        %176 = comb.and %178, %179 : i1
        %177 = comb.icmp ne %176, %175 : i1
        %174 = hw.bitcast %177 : (i1) -> i1
        %181 = hw.constant 0 : i1
        %184 = hw.bitcast %154 : (i1) -> i1
        %185 = hw.bitcast %170 : (i1) -> i1
        %182 = comb.and %184, %185 : i1
        %183 = comb.icmp ne %182, %181 : i1
        %180 = hw.bitcast %183 : (i1) -> i1
        %187 = hw.constant 0 : i1
        %190 = hw.bitcast %164 : (i1) -> i1
        %191 = hw.bitcast %170 : (i1) -> i1
        %188 = comb.and %190, %191 : i1
        %189 = comb.icmp ne %188, %187 : i1
        %186 = hw.bitcast %189 : (i1) -> i1
        %192 = spechls.field<"imm_I"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %194 = hw.bitcast %192 : (ui16) -> i16
        %195 = comb.extract %194 from 15 : (i16) -> i1
        %196 = comb.replicate %195 : (i1) -> i16
        %197 = comb.concat %196, %194 : i16, i16
        %193 = hw.bitcast %197 : (i32) -> si32
        %199 = hw.constant -1 : i1
        %200 = hw.bitcast %170 : (i1) -> i1
        %201 = comb.xor %200, %199 : i1
        %198 = hw.bitcast %201 : (i1) -> i1
        %203 = hw.constant 0 : i1
        %206 = hw.bitcast %158 : (i1) -> i1
        %207 = hw.bitcast %198 : (i1) -> i1
        %204 = comb.and %206, %207 : i1
        %205 = comb.icmp ne %204, %203 : i1
        %202 = hw.bitcast %205 : (i1) -> i1
        %209 = hw.constant 0 : i1
        %212 = hw.bitcast %154 : (i1) -> i1
        %213 = hw.bitcast %198 : (i1) -> i1
        %210 = comb.and %212, %213 : i1
        %211 = comb.icmp ne %210, %209 : i1
        %208 = hw.bitcast %211 : (i1) -> i1
        %215 = hw.constant 0 : i1
        %218 = hw.bitcast %164 : (i1) -> i1
        %219 = hw.bitcast %198 : (i1) -> i1
        %216 = comb.and %218, %219 : i1
        %217 = comb.icmp ne %216, %215 : i1
        %214 = hw.bitcast %217 : (i1) -> i1
        %222 = hw.bitcast %108 : (ui32) -> i32
        %223 = hw.bitcast %29 : (ui32) -> i32
        %221 = comb.icmp eq %222, %223 : i32
        %220 = hw.bitcast %221 : (i1) -> i1
        %225 = hw.constant 0 : i1
        %228 = hw.bitcast %202 : (i1) -> i1
        %229 = hw.bitcast %220 : (i1) -> i1
        %226 = comb.and %228, %229 : i1
        %227 = comb.icmp ne %226, %225 : i1
        %224 = hw.bitcast %227 : (i1) -> i1
        %231 = hw.constant 0 : i1
        %234 = hw.bitcast %208 : (i1) -> i1
        %235 = hw.bitcast %220 : (i1) -> i1
        %232 = comb.and %234, %235 : i1
        %233 = comb.icmp ne %232, %231 : i1
        %230 = hw.bitcast %233 : (i1) -> i1
        %237 = hw.constant 0 : i1
        %240 = hw.bitcast %198 : (i1) -> i1
        %241 = hw.bitcast %220 : (i1) -> i1
        %238 = comb.and %240, %241 : i1
        %239 = comb.icmp ne %238, %237 : i1
        %236 = hw.bitcast %239 : (i1) -> i1
        %243 = hw.constant 0 : i1
        %246 = hw.bitcast %214 : (i1) -> i1
        %247 = hw.bitcast %220 : (i1) -> i1
        %244 = comb.and %246, %247 : i1
        %245 = comb.icmp ne %244, %243 : i1
        %242 = hw.bitcast %245 : (i1) -> i1
        %248 = spechls.field<"imm_U"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %249 = hw.bitcast %248 : (ui32) -> si32
        %251 = hw.constant -1 : i1
        %252 = hw.bitcast %220 : (i1) -> i1
        %253 = comb.xor %252, %251 : i1
        %250 = hw.bitcast %253 : (i1) -> i1
        %255 = hw.constant 0 : i1
        %258 = hw.bitcast %202 : (i1) -> i1
        %259 = hw.bitcast %250 : (i1) -> i1
        %256 = comb.and %258, %259 : i1
        %257 = comb.icmp ne %256, %255 : i1
        %254 = hw.bitcast %257 : (i1) -> i1
        %261 = hw.constant 0 : i1
        %264 = hw.bitcast %208 : (i1) -> i1
        %265 = hw.bitcast %250 : (i1) -> i1
        %262 = comb.and %264, %265 : i1
        %263 = comb.icmp ne %262, %261 : i1
        %260 = hw.bitcast %263 : (i1) -> i1
        %267 = hw.constant 0 : i1
        %270 = hw.bitcast %198 : (i1) -> i1
        %271 = hw.bitcast %250 : (i1) -> i1
        %268 = comb.and %270, %271 : i1
        %269 = comb.icmp ne %268, %267 : i1
        %266 = hw.bitcast %269 : (i1) -> i1
        %273 = hw.constant 0 : i1
        %276 = hw.bitcast %214 : (i1) -> i1
        %277 = hw.bitcast %250 : (i1) -> i1
        %274 = comb.and %276, %277 : i1
        %275 = comb.icmp ne %274, %273 : i1
        %272 = hw.bitcast %275 : (i1) -> i1
        %280 = hw.bitcast %108 : (ui32) -> i32
        %281 = hw.bitcast %32 : (ui32) -> i32
        %279 = comb.icmp eq %280, %281 : i32
        %278 = hw.bitcast %279 : (i1) -> i1
        %283 = hw.constant 0 : i1
        %286 = hw.bitcast %254 : (i1) -> i1
        %287 = hw.bitcast %278 : (i1) -> i1
        %284 = comb.and %286, %287 : i1
        %285 = comb.icmp ne %284, %283 : i1
        %282 = hw.bitcast %285 : (i1) -> i1
        %289 = hw.constant 0 : i1
        %292 = hw.bitcast %260 : (i1) -> i1
        %293 = hw.bitcast %278 : (i1) -> i1
        %290 = comb.and %292, %293 : i1
        %291 = comb.icmp ne %290, %289 : i1
        %288 = hw.bitcast %291 : (i1) -> i1
        %295 = hw.constant 0 : i1
        %298 = hw.bitcast %266 : (i1) -> i1
        %299 = hw.bitcast %278 : (i1) -> i1
        %296 = comb.and %298, %299 : i1
        %297 = comb.icmp ne %296, %295 : i1
        %294 = hw.bitcast %297 : (i1) -> i1
        %301 = hw.constant 0 : i1
        %304 = hw.bitcast %250 : (i1) -> i1
        %305 = hw.bitcast %278 : (i1) -> i1
        %302 = comb.and %304, %305 : i1
        %303 = comb.icmp ne %302, %301 : i1
        %300 = hw.bitcast %303 : (i1) -> i1
        %307 = hw.constant 0 : i1
        %310 = hw.bitcast %272 : (i1) -> i1
        %311 = hw.bitcast %278 : (i1) -> i1
        %308 = comb.and %310, %311 : i1
        %309 = comb.icmp ne %308, %307 : i1
        %306 = hw.bitcast %309 : (i1) -> i1
        %312 = spechls.field<"shamt"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %314 = hw.bitcast %312 : (ui8) -> i8
        %315 = comb.extract %314 from 7 : (i8) -> i1
        %316 = comb.replicate %315 : (i1) -> i24
        %317 = comb.concat %316, %314 : i24, i8
        %313 = hw.bitcast %317 : (i32) -> si32
        %319 = hw.constant -1 : i1
        %320 = hw.bitcast %278 : (i1) -> i1
        %321 = comb.xor %320, %319 : i1
        %318 = hw.bitcast %321 : (i1) -> i1
        %323 = hw.constant 0 : i1
        %326 = hw.bitcast %254 : (i1) -> i1
        %327 = hw.bitcast %318 : (i1) -> i1
        %324 = comb.and %326, %327 : i1
        %325 = comb.icmp ne %324, %323 : i1
        %322 = hw.bitcast %325 : (i1) -> i1
        %329 = hw.constant 0 : i1
        %332 = hw.bitcast %260 : (i1) -> i1
        %333 = hw.bitcast %318 : (i1) -> i1
        %330 = comb.and %332, %333 : i1
        %331 = comb.icmp ne %330, %329 : i1
        %328 = hw.bitcast %331 : (i1) -> i1
        %335 = hw.constant 0 : i1
        %338 = hw.bitcast %266 : (i1) -> i1
        %339 = hw.bitcast %318 : (i1) -> i1
        %336 = comb.and %338, %339 : i1
        %337 = comb.icmp ne %336, %335 : i1
        %334 = hw.bitcast %337 : (i1) -> i1
        %341 = hw.constant 0 : i1
        %344 = hw.bitcast %250 : (i1) -> i1
        %345 = hw.bitcast %318 : (i1) -> i1
        %342 = comb.and %344, %345 : i1
        %343 = comb.icmp ne %342, %341 : i1
        %340 = hw.bitcast %343 : (i1) -> i1
        %347 = hw.constant 0 : i1
        %350 = hw.bitcast %272 : (i1) -> i1
        %351 = hw.bitcast %318 : (i1) -> i1
        %348 = comb.and %350, %351 : i1
        %349 = comb.icmp ne %348, %347 : i1
        %346 = hw.bitcast %349 : (i1) -> i1
        %352 = spechls.field<"simm_S"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %354 = hw.bitcast %352 : (si16) -> i16
        %355 = comb.extract %354 from 15 : (i16) -> i1
        %356 = comb.replicate %355 : (i1) -> i16
        %357 = comb.concat %356, %354 : i16, i16
        %353 = hw.bitcast %357 : (i32) -> si32
        %359 = hw.constant 0 : i1
        %362 = hw.bitcast %282 : (i1) -> i1
        %363 = hw.bitcast %322 : (i1) -> i1
        %360 = comb.or %362, %363 : i1
        %361 = comb.icmp ne %360, %359 : i1
        %358 = hw.bitcast %361 : (i1) -> i1
        %365 = hw.constant 0 : i1
        %368 = hw.bitcast %288 : (i1) -> i1
        %369 = hw.bitcast %328 : (i1) -> i1
        %366 = comb.or %368, %369 : i1
        %367 = comb.icmp ne %366, %365 : i1
        %364 = hw.bitcast %367 : (i1) -> i1
        %371 = hw.constant 0 : i1
        %374 = hw.bitcast %294 : (i1) -> i1
        %375 = hw.bitcast %334 : (i1) -> i1
        %372 = comb.or %374, %375 : i1
        %373 = comb.icmp ne %372, %371 : i1
        %370 = hw.bitcast %373 : (i1) -> i1
        %377 = hw.constant 0 : i1
        %380 = hw.bitcast %300 : (i1) -> i1
        %381 = hw.bitcast %340 : (i1) -> i1
        %378 = comb.or %380, %381 : i1
        %379 = comb.icmp ne %378, %377 : i1
        %376 = hw.bitcast %379 : (i1) -> i1
        %383 = hw.constant 0 : i1
        %386 = hw.bitcast %306 : (i1) -> i1
        %387 = hw.bitcast %346 : (i1) -> i1
        %384 = comb.or %386, %387 : i1
        %385 = comb.icmp ne %384, %383 : i1
        %382 = hw.bitcast %385 : (i1) -> i1
        %389 = hw.constant 0 : i1
        %392 = hw.bitcast %224 : (i1) -> i1
        %393 = hw.bitcast %358 : (i1) -> i1
        %390 = comb.or %392, %393 : i1
        %391 = comb.icmp ne %390, %389 : i1
        %388 = hw.bitcast %391 : (i1) -> i1
        %395 = hw.constant 0 : i1
        %398 = hw.bitcast %230 : (i1) -> i1
        %399 = hw.bitcast %364 : (i1) -> i1
        %396 = comb.or %398, %399 : i1
        %397 = comb.icmp ne %396, %395 : i1
        %394 = hw.bitcast %397 : (i1) -> i1
        %401 = hw.constant 0 : i1
        %404 = hw.bitcast %236 : (i1) -> i1
        %405 = hw.bitcast %370 : (i1) -> i1
        %402 = comb.or %404, %405 : i1
        %403 = comb.icmp ne %402, %401 : i1
        %400 = hw.bitcast %403 : (i1) -> i1
        %407 = hw.constant 0 : i1
        %410 = hw.bitcast %242 : (i1) -> i1
        %411 = hw.bitcast %382 : (i1) -> i1
        %408 = comb.or %410, %411 : i1
        %409 = comb.icmp ne %408, %407 : i1
        %406 = hw.bitcast %409 : (i1) -> i1
        %413 = hw.constant 0 : i1
        %416 = hw.bitcast %174 : (i1) -> i1
        %417 = hw.bitcast %388 : (i1) -> i1
        %414 = comb.or %416, %417 : i1
        %415 = comb.icmp ne %414, %413 : i1
        %412 = hw.bitcast %415 : (i1) -> i1
        %419 = hw.constant 0 : i1
        %422 = hw.bitcast %180 : (i1) -> i1
        %423 = hw.bitcast %394 : (i1) -> i1
        %420 = comb.or %422, %423 : i1
        %421 = comb.icmp ne %420, %419 : i1
        %418 = hw.bitcast %421 : (i1) -> i1
        %425 = hw.constant 0 : i1
        %428 = hw.bitcast %186 : (i1) -> i1
        %429 = hw.bitcast %406 : (i1) -> i1
        %426 = comb.or %428, %429 : i1
        %427 = comb.icmp ne %426, %425 : i1
        %424 = hw.bitcast %427 : (i1) -> i1
        %431 = hw.constant 0 : i1
        %434 = hw.bitcast %136 : (i1) -> i1
        %435 = hw.bitcast %412 : (i1) -> i1
        %432 = comb.or %434, %435 : i1
        %433 = comb.icmp ne %432, %431 : i1
        %430 = hw.bitcast %433 : (i1) -> i1
        %437 = hw.constant 0 : i1
        %440 = hw.bitcast %142 : (i1) -> i1
        %441 = hw.bitcast %424 : (i1) -> i1
        %438 = comb.or %440, %441 : i1
        %439 = comb.icmp ne %438, %437 : i1
        %436 = hw.bitcast %439 : (i1) -> i1
        %443 = hw.constant 0 : i1
        %446 = hw.bitcast %116 : (i1) -> i1
        %447 = hw.bitcast %436 : (i1) -> i1
        %444 = comb.or %446, %447 : i1
        %445 = comb.icmp ne %444, %443 : i1
        %442 = hw.bitcast %445 : (i1) -> i1
        %448 = spechls.field<"funct7"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %449 = spechls.field<"rd"> %49 : !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>
        %450 = spechls.call @useWriteReg(%89, %449) : (ui8, ui8) -> i1
        %452 = hw.constant 0 : i1
        %455 = hw.bitcast %442 : (i1) -> i1
        %456 = hw.bitcast %450 : (i1) -> i1
        %453 = comb.and %455, %456 : i1
        %454 = comb.icmp ne %453, %452 : i1
        %451 = hw.bitcast %454 : (i1) -> i1
        %458 = hw.constant -1 : i1
        %459 = hw.bitcast %450 : (i1) -> i1
        %460 = comb.xor %459, %458 : i1
        %457 = hw.bitcast %460 : (i1) -> i1
        %462 = hw.constant 0 : i1
        %465 = hw.bitcast %442 : (i1) -> i1
        %466 = hw.bitcast %457 : (i1) -> i1
        %463 = comb.and %465, %466 : i1
        %464 = comb.icmp ne %463, %462 : i1
        %461 = hw.bitcast %464 : (i1) -> i1
        %468 = hw.constant 0 : i1
        %471 = hw.bitcast %451 : (i1) -> i1
        %472 = hw.bitcast %461 : (i1) -> i1
        %469 = comb.or %471, %472 : i1
        %470 = comb.icmp ne %469, %468 : i1
        %467 = hw.bitcast %470 : (i1) -> i1
        %473 = spechls.gamma<"writeReg">(%450, %33, %449) : i1, ui8
        %475 = hw.bitcast %56 : (si8) -> i8
        %476 = comb.extract %475 from 7 : (i8) -> i1
        %477 = comb.replicate %476 : (i1) -> i24
        %478 = comb.concat %477, %475 : i24, i8
        %474 = hw.bitcast %478 : (i32) -> si32
        %480 = hw.constant 99 : i32
        %479 = hw.bitcast %480 : (i32) -> si32
        %483 = hw.bitcast %474 : (si32) -> i32
        %484 = hw.bitcast %479 : (si32) -> i32
        %482 = comb.icmp eq %483, %484 : i32
        %481 = hw.bitcast %482 : (i1) -> i1
        %486 = hw.bitcast %481 : (i1) -> i1
        %487 = hw.constant 0 : i31
        %488 = comb.concat %487, %486 : i31, i1
        %485 = hw.bitcast %488 : (i32) -> ui32
        %490 = hw.constant 0 : i32
        %491 = hw.bitcast %485 : (ui32) -> i32
        %489 = comb.icmp ugt %491, %490 : i32
        %493 = hw.constant 111 : i32
        %492 = hw.bitcast %493 : (i32) -> si32
        %496 = hw.bitcast %474 : (si32) -> i32
        %497 = hw.bitcast %492 : (si32) -> i32
        %495 = comb.icmp eq %496, %497 : i32
        %494 = hw.bitcast %495 : (i1) -> i1
        %499 = hw.bitcast %494 : (i1) -> i1
        %500 = hw.constant 0 : i31
        %501 = comb.concat %500, %499 : i31, i1
        %498 = hw.bitcast %501 : (i32) -> ui32
        %503 = hw.constant 0 : i32
        %504 = hw.bitcast %498 : (ui32) -> i32
        %502 = comb.icmp ugt %504, %503 : i32
        %506 = hw.constant 103 : i32
        %505 = hw.bitcast %506 : (i32) -> si32
        %509 = hw.bitcast %474 : (si32) -> i32
        %510 = hw.bitcast %505 : (si32) -> i32
        %508 = comb.icmp eq %509, %510 : i32
        %507 = hw.bitcast %508 : (i1) -> i1
        %512 = hw.bitcast %507 : (i1) -> i1
        %513 = hw.constant 0 : i31
        %514 = comb.concat %513, %512 : i31, i1
        %511 = hw.bitcast %514 : (i32) -> ui32
        %516 = hw.constant 0 : i32
        %517 = hw.bitcast %511 : (ui32) -> i32
        %515 = comb.icmp ugt %517, %516 : i32
        %519 = hw.bitcast %352 : (si16) -> i16
        %520 = comb.extract %519 from 15 : (i16) -> i1
        %521 = comb.replicate %520 : (i1) -> i16
        %522 = comb.concat %521, %519 : i16, i16
        %518 = hw.bitcast %522 : (i32) -> si32
        %524 = hw.constant 35 : i32
        %523 = hw.bitcast %524 : (i32) -> si32
        %527 = hw.bitcast %474 : (si32) -> i32
        %528 = hw.bitcast %523 : (si32) -> i32
        %526 = comb.icmp eq %527, %528 : i32
        %525 = hw.bitcast %526 : (i1) -> i1
        %530 = hw.constant 0 : i1
        %533 = hw.bitcast %481 : (i1) -> i1
        %534 = hw.bitcast %525 : (i1) -> i1
        %531 = comb.or %533, %534 : i1
        %532 = comb.icmp ne %531, %530 : i1
        %529 = hw.bitcast %532 : (i1) -> i1
        %536 = hw.bitcast %529 : (i1) -> i1
        %537 = hw.constant 0 : i31
        %538 = comb.concat %537, %536 : i31, i1
        %535 = hw.bitcast %538 : (i32) -> ui32
        %540 = hw.constant 0 : i32
        %541 = hw.bitcast %535 : (ui32) -> i32
        %539 = comb.icmp ugt %541, %540 : i32
        %543 = hw.constant 115 : i32
        %542 = hw.bitcast %543 : (i32) -> si32
        %546 = hw.bitcast %474 : (si32) -> i32
        %547 = hw.bitcast %542 : (si32) -> i32
        %545 = comb.icmp eq %546, %547 : i32
        %544 = hw.bitcast %545 : (i1) -> i1
        %549 = hw.bitcast %544 : (i1) -> i1
        %550 = hw.constant 0 : i31
        %551 = comb.concat %550, %549 : i31, i1
        %548 = hw.bitcast %551 : (i32) -> ui32
        %553 = hw.constant 0 : i32
        %554 = hw.bitcast %548 : (ui32) -> i32
        %552 = comb.icmp ugt %554, %553 : i32
        %556 = hw.constant 0 : i1
        %559 = hw.bitcast %539 : (i1) -> i1
        %560 = hw.bitcast %552 : (i1) -> i1
        %557 = comb.or %559, %560 : i1
        %558 = comb.icmp ne %557, %556 : i1
        %555 = hw.bitcast %558 : (i1) -> i1
        %562 = hw.bitcast %555 : (i1) -> i1
        %563 = hw.constant 0 : i31
        %564 = comb.concat %563, %562 : i31, i1
        %561 = hw.bitcast %564 : (i32) -> ui32
        %566 = hw.constant 0 : i32
        %567 = hw.bitcast %561 : (ui32) -> i32
        %565 = comb.icmp ugt %567, %566 : i32
        %569 = hw.constant 15 : i32
        %568 = hw.bitcast %569 : (i32) -> si32
        %572 = hw.bitcast %474 : (si32) -> i32
        %573 = hw.bitcast %568 : (si32) -> i32
        %571 = comb.icmp eq %572, %573 : i32
        %570 = hw.bitcast %571 : (i1) -> i1
        %575 = hw.bitcast %570 : (i1) -> i1
        %576 = hw.constant 0 : i31
        %577 = comb.concat %576, %575 : i31, i1
        %574 = hw.bitcast %577 : (i32) -> ui32
        %579 = hw.constant 0 : i32
        %580 = hw.bitcast %574 : (ui32) -> i32
        %578 = comb.icmp ugt %580, %579 : i32
        %582 = hw.constant 0 : i1
        %585 = hw.bitcast %565 : (i1) -> i1
        %586 = hw.bitcast %578 : (i1) -> i1
        %583 = comb.or %585, %586 : i1
        %584 = comb.icmp ne %583, %582 : i1
        %581 = hw.bitcast %584 : (i1) -> i1
        %588 = hw.constant -1 : i1
        %589 = hw.bitcast %581 : (i1) -> i1
        %590 = comb.xor %589, %588 : i1
        %587 = hw.bitcast %590 : (i1) -> i1
        %592 = hw.bitcast %587 : (i1) -> i1
        %593 = hw.constant 0 : i31
        %594 = comb.concat %593, %592 : i31, i1
        %591 = hw.bitcast %594 : (i32) -> ui32
        %596 = hw.constant 0 : i32
        %597 = hw.bitcast %591 : (ui32) -> i32
        %595 = comb.icmp ugt %597, %596 : i32
        %599 = hw.bitcast %71 : (si8) -> i8
        %600 = comb.extract %599 from 7 : (i8) -> i1
        %601 = comb.replicate %600 : (i1) -> i24
        %602 = comb.concat %601, %599 : i24, i8
        %598 = hw.bitcast %602 : (i32) -> si32
        %604 = hw.constant 4000 : i32
        %603 = hw.bitcast %604 : (i32) -> si32
        %607 = hw.bitcast %46 : (si32) -> i32
        %608 = hw.bitcast %603 : (si32) -> i32
        %606 = comb.icmp slt %607, %608 : i32
        %605 = hw.bitcast %606 : (i1) -> i1
        %610 = hw.bitcast %605 : (i1) -> i1
        %611 = comb.extract %610 from 0 : (i1) -> i1
        %612 = comb.replicate %611 : (i1) -> i31
        %613 = comb.concat %612, %610 : i31, i1
        %609 = hw.bitcast %613 : (i32) -> si32
        %614 = hw.constant 0 : i1
        %615 = hw.constant 1 : i1
        %616 = spechls.mu<"guard">(%17, %617) : i1
        %618 = spechls.call @g_ctrl__0(%430, %418, %400, %376, %318) : (i1, i1, i1, i1, i1) -> ui3
        %619 = spechls.delay %473 by 1 if %615 : ui8
        %620 = spechls.delay %45 by 1 if %615 init %14 : !spechls.array<si32, 32>
        %621 = spechls.delay %622 by 1 if %615 init %614 : i1
        %623 = spechls.delay %473 by 2 if %615 : ui8
        %624 = spechls.delay %620 by 1 if %615 init %14 : !spechls.array<si32, 32>
        %625 = spechls.delay %622 by 1 if %615 init %614 : i1
        %626 = spechls.delay %624 by 1 if %615 init %14 : !spechls.array<si32, 32>
        %627 = hw.bitcast %87 : (ui8) -> ui8
        %628 = hw.bitcast %619 : (ui8) -> ui8
        %631 = hw.bitcast %627 : (ui8) -> i8
        %632 = hw.bitcast %628 : (ui8) -> i8
        %630 = comb.icmp eq %631, %632 : i8
        %629 = hw.bitcast %630 : (i1) -> i1
        %634 = hw.constant 0 : i1
        %637 = hw.bitcast %629 : (i1) -> i1
        %638 = hw.bitcast %621 : (i1) -> i1
        %635 = comb.and %637, %638 : i1
        %636 = comb.icmp ne %635, %634 : i1
        %633 = hw.bitcast %636 : (i1) -> i1
        %639 = hw.bitcast %623 : (ui8) -> ui8
        %642 = hw.bitcast %627 : (ui8) -> i8
        %643 = hw.bitcast %639 : (ui8) -> i8
        %641 = comb.icmp eq %642, %643 : i8
        %640 = hw.bitcast %641 : (i1) -> i1
        %646 = hw.constant 0 : i1
        %649 = hw.bitcast %640 : (i1) -> i1
        %650 = hw.bitcast %644 : (i1) -> i1
        %647 = comb.and %649, %650 : i1
        %648 = comb.icmp ne %647, %646 : i1
        %645 = hw.bitcast %648 : (i1) -> i1
        %651 = hw.bitcast %88 : (ui8) -> ui8
        %654 = hw.bitcast %651 : (ui8) -> i8
        %655 = hw.bitcast %628 : (ui8) -> i8
        %653 = comb.icmp eq %654, %655 : i8
        %652 = hw.bitcast %653 : (i1) -> i1
        %657 = hw.constant 0 : i1
        %660 = hw.bitcast %652 : (i1) -> i1
        %661 = hw.bitcast %621 : (i1) -> i1
        %658 = comb.and %660, %661 : i1
        %659 = comb.icmp ne %658, %657 : i1
        %656 = hw.bitcast %659 : (i1) -> i1
        %664 = hw.bitcast %651 : (ui8) -> i8
        %665 = hw.bitcast %639 : (ui8) -> i8
        %663 = comb.icmp eq %664, %665 : i8
        %662 = hw.bitcast %663 : (i1) -> i1
        %667 = hw.constant 0 : i1
        %670 = hw.bitcast %662 : (i1) -> i1
        %671 = hw.bitcast %644 : (i1) -> i1
        %668 = comb.and %670, %671 : i1
        %669 = comb.icmp ne %668, %667 : i1
        %666 = hw.bitcast %669 : (i1) -> i1
        %673 = hw.constant 4 : i32
        %672 = hw.bitcast %673 : (i32) -> si32
        %676 = hw.bitcast %46 : (si32) -> i32
        %677 = hw.bitcast %672 : (si32) -> i32
        %675 = comb.add %676, %677 : i32
        %674 = hw.bitcast %675 : (i32) -> si32
        %679 = hw.constant 3 : i32
        %678 = hw.bitcast %679 : (i32) -> si32
        %682 = hw.bitcast %474 : (si32) -> i32
        %683 = hw.bitcast %678 : (si32) -> i32
        %681 = comb.icmp eq %682, %683 : i32
        %680 = hw.bitcast %681 : (i1) -> i1
        %685 = hw.constant -1 : i1
        %686 = hw.bitcast %680 : (i1) -> i1
        %687 = comb.xor %686, %685 : i1
        %684 = hw.bitcast %687 : (i1) -> i1
        %689 = hw.constant 0 : i32
        %688 = hw.bitcast %689 : (i32) -> si32
        %692 = hw.bitcast %598 : (si32) -> i32
        %693 = hw.bitcast %688 : (si32) -> i32
        %691 = comb.icmp ne %692, %693 : i32
        %690 = hw.bitcast %691 : (i1) -> i1
        %695 = hw.bitcast %690 : (i1) -> i1
        %696 = hw.constant 0 : i31
        %697 = comb.concat %696, %695 : i31, i1
        %694 = hw.bitcast %697 : (i32) -> ui32
        %699 = hw.constant 0 : i32
        %700 = hw.bitcast %694 : (ui32) -> i32
        %698 = comb.icmp ugt %700, %699 : i32
        %702 = hw.constant 0 : i1
        %705 = hw.bitcast %595 : (i1) -> i1
        %706 = hw.bitcast %698 : (i1) -> i1
        %703 = comb.and %705, %706 : i1
        %704 = comb.icmp ne %703, %702 : i1
        %701 = hw.bitcast %704 : (i1) -> i1
        %709 = hw.bitcast %609 : (si32) -> i32
        %710 = hw.bitcast %688 : (si32) -> i32
        %708 = comb.icmp ne %709, %710 : i32
        %707 = hw.bitcast %708 : (i1) -> i1
        %712 = hw.constant 0 : i1
        %715 = hw.bitcast %616 : (i1) -> i1
        %716 = hw.bitcast %707 : (i1) -> i1
        %713 = comb.and %715, %716 : i1
        %714 = comb.icmp ne %713, %712 : i1
        %711 = hw.bitcast %714 : (i1) -> i1
        %617 = spechls.gamma<"guard">(%711, %614, %615) : i1, i1
        %718 = hw.constant 2 : i32
        %717 = hw.bitcast %718 : (i32) -> si32
        %720 = hw.constant 1 : i32
        %719 = hw.bitcast %720 : (i32) -> si32
        %722 = hw.constant 0 : i1
        %723 = hw.bitcast %645 : (i1) -> i1
        %725 = hw.bitcast %717 : (si32) -> i32
        %726 = hw.bitcast %719 : (si32) -> i32
        %724 = comb.icmp eq %723, %722 : i1
        %727 = comb.mux %724, %725, %726 : i32
        %721 = hw.bitcast %727 : (i32) -> si32
        %729 = hw.constant 0 : i1
        %730 = hw.bitcast %633 : (i1) -> i1
        %732 = hw.bitcast %721 : (si32) -> i32
        %733 = hw.bitcast %688 : (si32) -> i32
        %731 = comb.icmp eq %730, %729 : i1
        %734 = comb.mux %731, %732, %733 : i32
        %728 = hw.bitcast %734 : (i32) -> si32
        %736 = hw.constant 0 : i1
        %737 = hw.bitcast %666 : (i1) -> i1
        %739 = hw.bitcast %717 : (si32) -> i32
        %740 = hw.bitcast %719 : (si32) -> i32
        %738 = comb.icmp eq %737, %736 : i1
        %741 = comb.mux %738, %739, %740 : i32
        %735 = hw.bitcast %741 : (i32) -> si32
        %743 = hw.constant 0 : i1
        %744 = hw.bitcast %656 : (i1) -> i1
        %746 = hw.bitcast %735 : (si32) -> i32
        %747 = hw.bitcast %688 : (si32) -> i32
        %745 = comb.icmp eq %744, %743 : i1
        %748 = comb.mux %745, %746, %747 : i32
        %742 = hw.bitcast %748 : (i32) -> si32
        %751 = hw.bitcast %728 : (si32) -> i32
        %752 = hw.bitcast %742 : (si32) -> i32
        %750 = comb.icmp slt %751, %752 : i32
        %749 = hw.bitcast %750 : (i1) -> i1
        %754 = hw.constant 0 : i1
        %755 = hw.bitcast %749 : (i1) -> i1
        %757 = hw.bitcast %742 : (si32) -> i32
        %758 = hw.bitcast %728 : (si32) -> i32
        %756 = comb.icmp eq %755, %754 : i1
        %759 = comb.mux %756, %757, %758 : i32
        %753 = hw.bitcast %759 : (i32) -> si32
        %760 = hw.constant 1 : i1
        %761 = hw.constant 1 : i1
        %762 = wcet.penalty %620 by 1 if %761 : !spechls.array<si32, 32>
        %763 = hw.constant 1 : i1
        %764 = wcet.penalty %762 by 1 if %763 : !spechls.array<si32, 32>
        %765 = hw.constant 1 : i1
        %766 = wcet.penalty %624 by 1 if %765 : !spechls.array<si32, 32>
        %767 = spechls.gamma<"x">(%753, %764, %766, %626) : si32, !spechls.array<si32, 32>
        %768 = spechls.load %767[%87: ui8] : !spechls.array<si32, 32>
        %769 = spechls.load %767[%88: ui8] : !spechls.array<si32, 32>
        %770 = spechls.gamma<"data1">(%92, %768, %46) : i1, si32
        %771 = spechls.call @branch_target(%46, %49, %770) : (si32, !spechls.struct<"decode_info" { "opcode" : ui8, "rd" : ui8, "funct3" : ui8, "rs1" : ui8, "rs2" : ui8, "funct7" : ui8, "imm_I" : ui16, "funct12" : ui16, "simm_I" : si16, "imm_S" : ui16, "simm_S" : si16, "imm_U" : ui32, "shamt" : ui8, "imm_J" : ui32, "simm_J" : si32, "br_uoffset" : ui16, "br_offset" : si16 }>, si32) -> si32
        %772 = hw.bitcast %770 : (si32) -> si32
        %775 = hw.bitcast %772 : (si32) -> i32
        %776 = hw.bitcast %518 : (si32) -> i32
        %774 = comb.add %775, %776 : i32
        %773 = hw.bitcast %774 : (i32) -> si32
        %777 = spechls.call @correctAddr(%773) : (si32) -> si32
        %778 = hw.bitcast %777 : (si32) -> ui32
        %779 = spechls.gamma<"merge__0">(%618, %769, %149, %193, %249, %313, %353) : ui3, si32
        %780 = spechls.call @alu(%89, %105, %448, %770, %779) : (ui8, ui8, ui8, si32, si32) -> si32
        %783 = hw.bitcast %770 : (si32) -> i32
        %784 = hw.bitcast %779 : (si32) -> i32
        %782 = comb.sub %783, %784 : i32
        %781 = hw.bitcast %782 : (i32) -> si32
        %785 = spechls.call @branchTaken(%84, %781) : (si8, si32) -> i1
        %787 = hw.bitcast %785 : (i1) -> i1
        %788 = hw.constant 0 : i31
        %789 = comb.concat %788, %787 : i31, i1
        %786 = hw.bitcast %789 : (i32) -> ui32
        %791 = hw.constant 0 : i32
        %792 = hw.bitcast %786 : (ui32) -> i32
        %790 = comb.icmp ugt %792, %791 : i32
        %794 = hw.constant 0 : i1
        %797 = hw.bitcast %489 : (i1) -> i1
        %798 = hw.bitcast %790 : (i1) -> i1
        %795 = comb.and %797, %798 : i1
        %796 = comb.icmp ne %795, %794 : i1
        %793 = hw.bitcast %796 : (i1) -> i1
        %800 = hw.bitcast %793 : (i1) -> i1
        %801 = hw.constant 0 : i31
        %802 = comb.concat %801, %800 : i31, i1
        %799 = hw.bitcast %802 : (i32) -> ui32
        %804 = hw.constant 0 : i32
        %805 = hw.bitcast %799 : (ui32) -> i32
        %803 = comb.icmp ugt %805, %804 : i32
        %807 = hw.constant 0 : i1
        %810 = hw.bitcast %803 : (i1) -> i1
        %811 = hw.bitcast %502 : (i1) -> i1
        %808 = comb.or %810, %811 : i1
        %809 = comb.icmp ne %808, %807 : i1
        %806 = hw.bitcast %809 : (i1) -> i1
        %813 = hw.bitcast %806 : (i1) -> i1
        %814 = hw.constant 0 : i31
        %815 = comb.concat %814, %813 : i31, i1
        %812 = hw.bitcast %815 : (i32) -> ui32
        %817 = hw.constant 0 : i32
        %818 = hw.bitcast %812 : (ui32) -> i32
        %816 = comb.icmp ugt %818, %817 : i32
        %820 = hw.constant 0 : i1
        %823 = hw.bitcast %816 : (i1) -> i1
        %824 = hw.bitcast %515 : (i1) -> i1
        %821 = comb.or %823, %824 : i1
        %822 = comb.icmp ne %821, %820 : i1
        %819 = hw.bitcast %822 : (i1) -> i1
        %826 = hw.constant 0 : i1
        %829 = hw.bitcast %467 : (i1) -> i1
        %830 = hw.bitcast %819 : (i1) -> i1
        %827 = comb.and %829, %830 : i1
        %828 = comb.icmp ne %827, %826 : i1
        %825 = hw.bitcast %828 : (i1) -> i1
        %832 = hw.constant -1 : i1
        %833 = hw.bitcast %819 : (i1) -> i1
        %834 = comb.xor %833, %832 : i1
        %831 = hw.bitcast %834 : (i1) -> i1
        %836 = hw.constant 0 : i1
        %839 = hw.bitcast %467 : (i1) -> i1
        %840 = hw.bitcast %831 : (i1) -> i1
        %837 = comb.and %839, %840 : i1
        %838 = comb.icmp ne %837, %836 : i1
        %835 = hw.bitcast %838 : (i1) -> i1
        %842 = hw.constant 0 : i1
        %845 = hw.bitcast %825 : (i1) -> i1
        %846 = hw.bitcast %835 : (i1) -> i1
        %843 = comb.or %845, %846 : i1
        %844 = comb.icmp ne %843, %842 : i1
        %841 = hw.bitcast %844 : (i1) -> i1
        %847 = spechls.call @correctAddr(%780) : (si32) -> si32
        %848 = hw.bitcast %847 : (si32) -> ui32
        %849 = spechls.call @doStore(%89, %105, %773, %779) : (ui8, ui8, si32, si32) -> !spechls.struct<"storeOpResult" { "ena0" : i1, "ena1" : i1, "ena2" : i1, "ena3" : i1, "val0" : ui8, "val1" : ui8, "val2" : ui8, "val3" : ui8 }>
        %850 = spechls.field<"ena0"> %849 : !spechls.struct<"storeOpResult" { "ena0" : i1, "ena1" : i1, "ena2" : i1, "ena3" : i1, "val0" : ui8, "val1" : ui8, "val2" : ui8, "val3" : ui8 }>
        %852 = hw.constant 0 : i1
        %855 = hw.bitcast %841 : (i1) -> i1
        %856 = hw.bitcast %850 : (i1) -> i1
        %853 = comb.and %855, %856 : i1
        %854 = comb.icmp ne %853, %852 : i1
        %851 = hw.bitcast %854 : (i1) -> i1
        %857 = spechls.field<"val0"> %849 : !spechls.struct<"storeOpResult" { "ena0" : i1, "ena1" : i1, "ena2" : i1, "ena3" : i1, "val0" : ui8, "val1" : ui8, "val2" : ui8, "val3" : ui8 }>
        %859 = hw.constant -1 : i1
        %860 = hw.bitcast %850 : (i1) -> i1
        %861 = comb.xor %860, %859 : i1
        %858 = hw.bitcast %861 : (i1) -> i1
        %863 = hw.constant 0 : i1
        %866 = hw.bitcast %841 : (i1) -> i1
        %867 = hw.bitcast %858 : (i1) -> i1
        %864 = comb.and %866, %867 : i1
        %865 = comb.icmp ne %864, %863 : i1
        %862 = hw.bitcast %865 : (i1) -> i1
        %868 = spechls.load %42[%848: ui32] : !spechls.array<ui8, 2048>
        %870 = hw.constant 0 : i1
        %873 = hw.bitcast %850 : (i1) -> i1
        %874 = hw.bitcast %858 : (i1) -> i1
        %871 = comb.or %873, %874 : i1
        %872 = comb.icmp ne %871, %870 : i1
        %869 = hw.bitcast %872 : (i1) -> i1
        %876 = hw.constant 0 : i1
        %879 = hw.bitcast %851 : (i1) -> i1
        %880 = hw.bitcast %862 : (i1) -> i1
        %877 = comb.or %879, %880 : i1
        %878 = comb.icmp ne %877, %876 : i1
        %875 = hw.bitcast %878 : (i1) -> i1
        %881 = spechls.gamma<"loadedByte0">(%850, %868, %33) : i1, ui8
        %882 = spechls.field<"ena1"> %849 : !spechls.struct<"storeOpResult" { "ena0" : i1, "ena1" : i1, "ena2" : i1, "ena3" : i1, "val0" : ui8, "val1" : ui8, "val2" : ui8, "val3" : ui8 }>
        %884 = hw.constant 0 : i1
        %887 = hw.bitcast %869 : (i1) -> i1
        %888 = hw.bitcast %882 : (i1) -> i1
        %885 = comb.and %887, %888 : i1
        %886 = comb.icmp ne %885, %884 : i1
        %883 = hw.bitcast %886 : (i1) -> i1
        %890 = hw.constant 0 : i1
        %893 = hw.bitcast %875 : (i1) -> i1
        %894 = hw.bitcast %882 : (i1) -> i1
        %891 = comb.and %893, %894 : i1
        %892 = comb.icmp ne %891, %890 : i1
        %889 = hw.bitcast %892 : (i1) -> i1
        %895 = spechls.field<"val1"> %849 : !spechls.struct<"storeOpResult" { "ena0" : i1, "ena1" : i1, "ena2" : i1, "ena3" : i1, "val0" : ui8, "val1" : ui8, "val2" : ui8, "val3" : ui8 }>
        %897 = hw.constant -1 : i1
        %898 = hw.bitcast %882 : (i1) -> i1
        %899 = comb.xor %898, %897 : i1
        %896 = hw.bitcast %899 : (i1) -> i1
        %901 = hw.constant 0 : i1
        %904 = hw.bitcast %869 : (i1) -> i1
        %905 = hw.bitcast %896 : (i1) -> i1
        %902 = comb.and %904, %905 : i1
        %903 = comb.icmp ne %902, %901 : i1
        %900 = hw.bitcast %903 : (i1) -> i1
        %907 = hw.constant 0 : i1
        %910 = hw.bitcast %875 : (i1) -> i1
        %911 = hw.bitcast %896 : (i1) -> i1
        %908 = comb.and %910, %911 : i1
        %909 = comb.icmp ne %908, %907 : i1
        %906 = hw.bitcast %909 : (i1) -> i1
        %912 = spechls.load %40[%848: ui32] : !spechls.array<ui8, 2048>
        %914 = hw.constant 0 : i1
        %917 = hw.bitcast %883 : (i1) -> i1
        %918 = hw.bitcast %900 : (i1) -> i1
        %915 = comb.or %917, %918 : i1
        %916 = comb.icmp ne %915, %914 : i1
        %913 = hw.bitcast %916 : (i1) -> i1
        %920 = hw.constant 0 : i1
        %923 = hw.bitcast %889 : (i1) -> i1
        %924 = hw.bitcast %906 : (i1) -> i1
        %921 = comb.or %923, %924 : i1
        %922 = comb.icmp ne %921, %920 : i1
        %919 = hw.bitcast %922 : (i1) -> i1
        %925 = spechls.gamma<"loadedByte1">(%900, %33, %912) : i1, ui8
        %926 = spechls.field<"ena2"> %849 : !spechls.struct<"storeOpResult" { "ena0" : i1, "ena1" : i1, "ena2" : i1, "ena3" : i1, "val0" : ui8, "val1" : ui8, "val2" : ui8, "val3" : ui8 }>
        %928 = hw.constant 0 : i1
        %931 = hw.bitcast %913 : (i1) -> i1
        %932 = hw.bitcast %926 : (i1) -> i1
        %929 = comb.and %931, %932 : i1
        %930 = comb.icmp ne %929, %928 : i1
        %927 = hw.bitcast %930 : (i1) -> i1
        %934 = hw.constant 0 : i1
        %937 = hw.bitcast %919 : (i1) -> i1
        %938 = hw.bitcast %926 : (i1) -> i1
        %935 = comb.and %937, %938 : i1
        %936 = comb.icmp ne %935, %934 : i1
        %933 = hw.bitcast %936 : (i1) -> i1
        %939 = spechls.field<"val2"> %849 : !spechls.struct<"storeOpResult" { "ena0" : i1, "ena1" : i1, "ena2" : i1, "ena3" : i1, "val0" : ui8, "val1" : ui8, "val2" : ui8, "val3" : ui8 }>
        %941 = hw.constant -1 : i1
        %942 = hw.bitcast %926 : (i1) -> i1
        %943 = comb.xor %942, %941 : i1
        %940 = hw.bitcast %943 : (i1) -> i1
        %945 = hw.constant 0 : i1
        %948 = hw.bitcast %913 : (i1) -> i1
        %949 = hw.bitcast %940 : (i1) -> i1
        %946 = comb.and %948, %949 : i1
        %947 = comb.icmp ne %946, %945 : i1
        %944 = hw.bitcast %947 : (i1) -> i1
        %951 = hw.constant 0 : i1
        %954 = hw.bitcast %919 : (i1) -> i1
        %955 = hw.bitcast %940 : (i1) -> i1
        %952 = comb.and %954, %955 : i1
        %953 = comb.icmp ne %952, %951 : i1
        %950 = hw.bitcast %953 : (i1) -> i1
        %956 = spechls.load %38[%848: ui32] : !spechls.array<ui8, 2048>
        %958 = hw.constant 0 : i1
        %961 = hw.bitcast %927 : (i1) -> i1
        %962 = hw.bitcast %944 : (i1) -> i1
        %959 = comb.or %961, %962 : i1
        %960 = comb.icmp ne %959, %958 : i1
        %957 = hw.bitcast %960 : (i1) -> i1
        %964 = hw.constant 0 : i1
        %967 = hw.bitcast %933 : (i1) -> i1
        %968 = hw.bitcast %950 : (i1) -> i1
        %965 = comb.or %967, %968 : i1
        %966 = comb.icmp ne %965, %964 : i1
        %963 = hw.bitcast %966 : (i1) -> i1
        %969 = spechls.gamma<"loadedByte2">(%944, %33, %956) : i1, ui8
        %970 = spechls.field<"ena3"> %849 : !spechls.struct<"storeOpResult" { "ena0" : i1, "ena1" : i1, "ena2" : i1, "ena3" : i1, "val0" : ui8, "val1" : ui8, "val2" : ui8, "val3" : ui8 }>
        %972 = hw.constant 0 : i1
        %975 = hw.bitcast %963 : (i1) -> i1
        %976 = hw.bitcast %970 : (i1) -> i1
        %973 = comb.and %975, %976 : i1
        %974 = comb.icmp ne %973, %972 : i1
        %971 = hw.bitcast %974 : (i1) -> i1
        %977 = spechls.field<"val3"> %849 : !spechls.struct<"storeOpResult" { "ena0" : i1, "ena1" : i1, "ena2" : i1, "ena3" : i1, "val0" : ui8, "val1" : ui8, "val2" : ui8, "val3" : ui8 }>
        %979 = hw.constant -1 : i1
        %980 = hw.bitcast %970 : (i1) -> i1
        %981 = comb.xor %980, %979 : i1
        %978 = hw.bitcast %981 : (i1) -> i1
        %983 = hw.constant 0 : i1
        %986 = hw.bitcast %957 : (i1) -> i1
        %987 = hw.bitcast %978 : (i1) -> i1
        %984 = comb.and %986, %987 : i1
        %985 = comb.icmp ne %984, %983 : i1
        %982 = hw.bitcast %985 : (i1) -> i1
        %989 = hw.constant 0 : i1
        %992 = hw.bitcast %963 : (i1) -> i1
        %993 = hw.bitcast %978 : (i1) -> i1
        %990 = comb.and %992, %993 : i1
        %991 = comb.icmp ne %990, %989 : i1
        %988 = hw.bitcast %991 : (i1) -> i1
        %994 = spechls.load %36[%848: ui32] : !spechls.array<ui8, 2048>
        %996 = hw.constant 0 : i1
        %999 = hw.bitcast %971 : (i1) -> i1
        %1000 = hw.bitcast %988 : (i1) -> i1
        %997 = comb.or %999, %1000 : i1
        %998 = comb.icmp ne %997, %996 : i1
        %995 = hw.bitcast %998 : (i1) -> i1
        %1001 = spechls.gamma<"loadedByte3">(%982, %33, %994) : i1, ui8
        %1002 = spechls.call @loadProxy(%89, %105, %780, %881, %925, %969, %1001) : (ui8, ui8, si32, ui8, ui8, ui8, ui8) -> si32
        %1004 = hw.constant 0 : i1
        %1007 = hw.bitcast %995 : (i1) -> i1
        %1008 = hw.bitcast %680 : (i1) -> i1
        %1005 = comb.and %1007, %1008 : i1
        %1006 = comb.icmp ne %1005, %1004 : i1
        %1003 = hw.bitcast %1006 : (i1) -> i1
        %1010 = hw.constant 0 : i1
        %1013 = hw.bitcast %995 : (i1) -> i1
        %1014 = hw.bitcast %684 : (i1) -> i1
        %1011 = comb.and %1013, %1014 : i1
        %1012 = comb.icmp ne %1011, %1010 : i1
        %1009 = hw.bitcast %1012 : (i1) -> i1
        %1015 = spechls.call @selectResult(%89, %448, %780, %46, %449) : (ui8, ui8, si32, si32, ui8) -> si32
        %1017 = hw.constant 0 : i1
        %1020 = hw.bitcast %1003 : (i1) -> i1
        %1021 = hw.bitcast %1009 : (i1) -> i1
        %1018 = comb.or %1020, %1021 : i1
        %1019 = comb.icmp ne %1018, %1017 : i1
        %1016 = hw.bitcast %1019 : (i1) -> i1
        %1022 = spechls.gamma<"writeValue">(%680, %1015, %1002) : i1, si32
        %1024 = hw.constant 0 : i1
        %1027 = hw.bitcast %1016 : (i1) -> i1
        %1028 = hw.bitcast %701 : (i1) -> i1
        %1025 = comb.and %1027, %1028 : i1
        %1026 = comb.icmp ne %1025, %1024 : i1
        %1023 = hw.bitcast %1026 : (i1) -> i1
        %1030 = hw.constant 0 : i1
        %1033 = hw.bitcast %851 : (i1) -> i1
        %1034 = hw.bitcast %616 : (i1) -> i1
        %1031 = comb.and %1033, %1034 : i1
        %1032 = comb.icmp ne %1031, %1030 : i1
        %1029 = hw.bitcast %1032 : (i1) -> i1
        %1036 = hw.constant 0 : i1
        %1039 = hw.bitcast %889 : (i1) -> i1
        %1040 = hw.bitcast %616 : (i1) -> i1
        %1037 = comb.and %1039, %1040 : i1
        %1038 = comb.icmp ne %1037, %1036 : i1
        %1035 = hw.bitcast %1038 : (i1) -> i1
        %1042 = hw.constant 0 : i1
        %1045 = hw.bitcast %933 : (i1) -> i1
        %1046 = hw.bitcast %616 : (i1) -> i1
        %1043 = comb.and %1045, %1046 : i1
        %1044 = comb.icmp ne %1043, %1042 : i1
        %1041 = hw.bitcast %1044 : (i1) -> i1
        %1048 = hw.constant 0 : i1
        %1051 = hw.bitcast %971 : (i1) -> i1
        %1052 = hw.bitcast %616 : (i1) -> i1
        %1049 = comb.and %1051, %1052 : i1
        %1050 = comb.icmp ne %1049, %1048 : i1
        %1047 = hw.bitcast %1050 : (i1) -> i1
        %1054 = hw.constant 0 : i1
        %1057 = hw.bitcast %1023 : (i1) -> i1
        %1058 = hw.bitcast %616 : (i1) -> i1
        %1055 = comb.and %1057, %1058 : i1
        %1056 = comb.icmp ne %1055, %1054 : i1
        %1053 = hw.bitcast %1056 : (i1) -> i1
        %1060 = hw.constant 0 : i1
        %1063 = hw.bitcast %1029 : (i1) -> i1
        %1064 = hw.bitcast %851 : (i1) -> i1
        %1061 = comb.and %1063, %1064 : i1
        %1062 = comb.icmp ne %1061, %1060 : i1
        %1059 = hw.bitcast %1062 : (i1) -> i1
        %43 = spechls.alpha %42[%778: ui32], %857 if %1059 : !spechls.array<ui8, 2048>
        %1066 = hw.constant 0 : i1
        %1069 = hw.bitcast %1035 : (i1) -> i1
        %1070 = hw.bitcast %889 : (i1) -> i1
        %1067 = comb.and %1069, %1070 : i1
        %1068 = comb.icmp ne %1067, %1066 : i1
        %1065 = hw.bitcast %1068 : (i1) -> i1
        %41 = spechls.alpha %40[%778: ui32], %895 if %1065 : !spechls.array<ui8, 2048>
        %1072 = hw.constant 0 : i1
        %1075 = hw.bitcast %1041 : (i1) -> i1
        %1076 = hw.bitcast %933 : (i1) -> i1
        %1073 = comb.and %1075, %1076 : i1
        %1074 = comb.icmp ne %1073, %1072 : i1
        %1071 = hw.bitcast %1074 : (i1) -> i1
        %39 = spechls.alpha %38[%778: ui32], %939 if %1071 : !spechls.array<ui8, 2048>
        %1078 = hw.constant 0 : i1
        %1081 = hw.bitcast %1047 : (i1) -> i1
        %1082 = hw.bitcast %971 : (i1) -> i1
        %1079 = comb.and %1081, %1082 : i1
        %1080 = comb.icmp ne %1079, %1078 : i1
        %1077 = hw.bitcast %1080 : (i1) -> i1
        %37 = spechls.alpha %36[%778: ui32], %977 if %1077 : !spechls.array<ui8, 2048>
        %1083 = hw.constant 0 : i1
        %1086 = hw.bitcast %1053 : (i1) -> i1
        %1087 = hw.bitcast %1023 : (i1) -> i1
        %1084 = comb.and %1086, %1087 : i1
        %1085 = comb.icmp ne %1084, %1083 : i1
        %622 = hw.bitcast %1085 : (i1) -> i1
        %45 = spechls.alpha %44[%473: ui8], %1022 if %622 : !spechls.array<si32, 32>
        %1088 = spechls.pack %760, %617, %701, %1016, %1023, %616, %46, %473, %1022 : (i1, i1, i1, i1, i1, i1, si32, ui8, si32) -> !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
        %1089 = hw.constant 1 : i1
        %1090 = wcet.penalty %771 by 2 if %1089 : si32
        %47 = spechls.gamma<"next_pc">(%819, %674, %1090) : i1, si32
        %644 = spechls.delay %625 by 1 if %615 init %614 : i1
        spechls.commit %760, %1088 : !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
    }
    %1091 = spechls.task "merged_DAG_0_SCC_io_state"(%1092 = %8, %1093 = %9) : (si32, !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>) -> !spechls.struct<"commit_type_2" { "enable" : i1, "commit_val_0" : i1 }> {
        %1094 = spechls.field<"commit_val_0"> %1093 : !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
        %1096 = hw.constant -1 : i1
        %1097 = hw.bitcast %1094 : (i1) -> i1
        %1098 = comb.xor %1097, %1096 : i1
        %1095 = hw.bitcast %1098 : (i1) -> i1
        %1099 = spechls.mu<"io_state">(%1092, %1100) : si32
        %1102 = spechls.field<"commit_val_1"> %1093 : !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
        %1104 = hw.constant -1 : i1
        %1105 = hw.bitcast %1102 : (i1) -> i1
        %1106 = comb.xor %1105, %1104 : i1
        %1103 = hw.bitcast %1106 : (i1) -> i1
        %1107 = spechls.field<"commit_val_2"> %1093 : !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
        %1109 = hw.constant 0 : i1
        %1112 = hw.bitcast %1107 : (i1) -> i1
        %1113 = hw.bitcast %1103 : (i1) -> i1
        %1110 = comb.and %1112, %1113 : i1
        %1111 = comb.icmp ne %1110, %1109 : i1
        %1108 = hw.bitcast %1111 : (i1) -> i1
        %1114 = spechls.field<"commit_val_3"> %1093 : !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
        %1116 = hw.constant 0 : i1
        %1119 = hw.bitcast %1114 : (i1) -> i1
        %1120 = hw.bitcast %1108 : (i1) -> i1
        %1117 = comb.or %1119, %1120 : i1
        %1118 = comb.icmp ne %1117, %1116 : i1
        %1115 = hw.bitcast %1118 : (i1) -> i1
        %1121 = spechls.field<"commit_val_4"> %1093 : !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
        %1123 = hw.constant 0 : i1
        %1126 = hw.bitcast %1115 : (i1) -> i1
        %1127 = hw.bitcast %1121 : (i1) -> i1
        %1124 = comb.and %1126, %1127 : i1
        %1125 = comb.icmp ne %1124, %1123 : i1
        %1122 = hw.bitcast %1125 : (i1) -> i1
        %1128 = spechls.field<"commit_val_5"> %1093 : !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
        %1129 = spechls.field<"commit_val_6"> %1093 : !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
        %1130 = spechls.field<"commit_val_7"> %1093 : !spechls.struct<"commit_type_1" { "enable" : i1, "commit_val_0" : i1, "commit_val_1" : i1, "commit_val_2" : i1, "commit_val_3" : i1, "commit_val_4" : i1, "commit_val_5" : si32, "commit_val_6" : ui8, "commit_val_7" : si32 }>
        %1131 = hw.bitcast %1099 : (si32) -> i32
        %1132 = spechls.print %1131, %1122, "%d : x[%d] = %d\n", %1128, %1129, %1130 : si32, ui8, si32
        %1133 = hw.bitcast %1132 : (i32) -> si32
        %1100 = hw.bitcast %1133 : (si32) -> si32
        %1134 = hw.constant 1 : i1
        %1135 = spechls.pack %1134, %1095 : (i1, i1) -> !spechls.struct<"commit_type_2" { "enable" : i1, "commit_val_0" : i1 }>
        spechls.commit %1134, %1135 : !spechls.struct<"commit_type_2" { "enable" : i1, "commit_val_0" : i1 }>
    }
    %1136 = spechls.task "exit"(%1137 = %1091) : (!spechls.struct<"commit_type_2" { "enable" : i1, "commit_val_0" : i1 }>) -> !spechls.struct<"commit_type_3" { "enable" : i1, "commit_val_0" : i1 }> {
        %1138 = spechls.field<"commit_val_0"> %1137 : !spechls.struct<"commit_type_2" { "enable" : i1, "commit_val_0" : i1 }>
        %1139 = hw.constant 1 : i1
        %1140 = spechls.pack %1139, %1138 : (i1, i1) -> !spechls.struct<"commit_type_3" { "enable" : i1, "commit_val_0" : i1 }>
        spechls.commit %1139, %1140 : !spechls.struct<"commit_type_3" { "enable" : i1, "commit_val_0" : i1 }>
    }
    %1141 = spechls.field<"commit_val_0"> %1136 : !spechls.struct<"commit_type_3" { "enable" : i1, "commit_val_0" : i1 }>
    %1142 = hw.bitcast %1141 : (i1) -> i1
    spechls.exit if %1142
}

